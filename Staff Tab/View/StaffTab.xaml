<Window x:Class="Staff_Tab.StaffTab"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Staff_Tab"
        xmlns:dv="clr-namespace:Staff_Tab.Services.DataVirtualization"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        Title="Staff Tab" Height="500" Width="700" MaxHeight="500" >
    <Window.Resources>
        <DataTemplate x:Key="DepartmentCheckBox" x:Shared="false">
            <CheckBox Content="{Binding Path=Title}"
                  Margin="3"
                  IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                  AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" >
            </CheckBox>
        </DataTemplate>
        <Style TargetType="ListViewItem">
            <Setter Property="dv:VirtualListItemBase.AutoLoad" Value="true" />
        </Style>
        <!-- Отображение треугольника при сортировки колонки ListView -->
        <DataTemplate x:Key="ListViewColumnHeaderTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter ContentTemplate="{x:Null}" />
                <Path x:Name="Path" Grid.Column="1" Fill="Black" Margin="4,0,2,0" VerticalAlignment="Center" />
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GridViewColumnHeader}, AncestorLevel=1}, Path=(dv:GridViewSort.SortOrder)}" Value="None">
                    <Setter TargetName="Path" Property="Visibility" Value="Collapsed" />
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GridViewColumnHeader}, AncestorLevel=1}, Path=(dv:GridViewSort.SortOrder)}" Value="Ascending">
                    <Setter TargetName="Path" Property="Data" Value="M 0 4 L 4 0 L 8 4 Z" />
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GridViewColumnHeader}, AncestorLevel=1}, Path=(dv:GridViewSort.SortOrder)}" Value="Descending">
                    <Setter TargetName="Path" Property="Data" Value="M 0 0 L 4 4 L 8 0 Z" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:Department}">
            <TextBlock Text="{Binding Title}" />
        </DataTemplate>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing" >
            <i:InvokeCommandAction 
                Command="{Binding ClosingCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <DockPanel>
        <Menu DockPanel.Dock="Top" Height="25" VerticalAlignment="Top">
            <MenuItem Header="Файл" Height="25" Width="51">
                <MenuItem Header="New" Command="{Binding NewCommand}" />
                <MenuItem Header="Open" Command="{Binding OpenCommand}" />
                <MenuItem Header="Save" IsEnabled="{Binding Updated}" Command="{Binding SaveCommand}" />
                <MenuItem Header="Save As" Command="{Binding SaveAsCommand}" />
                <Separator/>
                <MenuItem Header="Exit" Command="{Binding ClosingCommand}" />
            </MenuItem>
        </Menu>
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition x:Name="Collumn3" Width="*"/>
            </Grid.ColumnDefinitions>
            <ListView Grid.Column="0" 
                          x:Name="EmployeesListView" 
                          ItemsSource="{Binding SelectedEmployees}" 
                          VirtualizingStackPanel.IsVirtualizing="True" 
                          VirtualizingStackPanel.VirtualizationMode="Recycling" 
                          ScrollViewer.IsDeferredScrollingEnabled="True"
                          dv:GridViewSort.AutoSort="True"
                          dv:VirtualListLoadingIndicator.IsAttached="True"
                          Height="440"
                          Width="Auto">
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Add">
                            <MenuItem Header="Salary Employee" Command="{Binding AddSalaryEmployeeCommand}"/>
                            <MenuItem Header="Hourly Employee" Command="{Binding AddHourlyEmployeeCommand}"/>
                        </MenuItem>
                        <MenuItem Header="Edit" Command="{Binding EditEmployeeCommand}"
                                      CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu},Path=PlacementTarget.SelectedIndex}"/>
                        <MenuItem Header="Remove" Command="{Binding RemoveEmployeeCommand}"
                                      CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu},Path=PlacementTarget.SelectedItem}"/>
                    </ContextMenu>
                </ListView.ContextMenu>
                <ListView.View>
                    <GridView AllowsColumnReorder="true"
                                    ColumnHeaderTemplate="{StaticResource ListViewColumnHeaderTemplate}">
                        <GridViewColumn Width="Auto" DisplayMemberBinding="{Binding Data.SecondName}" Header="Second Name" dv:GridViewSort.PropertyName="SecondName" />
                        <GridViewColumn Width="Auto" DisplayMemberBinding="{Binding Data.FirstName}" Header="First Name" dv:GridViewSort.PropertyName="FirstName" />
                        <GridViewColumn Width="Auto" DisplayMemberBinding="{Binding Data.JobTitles}" Header="Job Titles" dv:GridViewSort.PropertyName="JobTitles" />
                        <GridViewColumn Width="Auto"  Header="Department" dv:GridViewSort.PropertyName="Department" >
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <ContentControl Content="{Binding Data.Department}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="Auto" DisplayMemberBinding="{Binding Data.JobStatus}" Header="Full or Part-Time" dv:GridViewSort.PropertyName="JobStatus" />
                        <GridViewColumn Width="Auto" DisplayMemberBinding="{Binding Data.PayFrequency}" Header="Salary or Hourly" dv:GridViewSort.PropertyName="PayFrequency" />
                        <GridViewColumn Width="Auto" DisplayMemberBinding="{Binding Data.TypicalHours}" Header="Typical Hours" dv:GridViewSort.PropertyName="TypicalHours" />
                        <GridViewColumn Width="Auto" DisplayMemberBinding="{Binding Data.AnnualSalary}" Header="Annual Salary" dv:GridViewSort.PropertyName="AnnualSalary" />
                        <GridViewColumn Width="Auto" DisplayMemberBinding="{Binding Data.HourlyRate}" Header="Hourly Rate" dv:GridViewSort.PropertyName="HourlyRate" />
                    </GridView>
                </ListView.View>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel>
                        </VirtualizingStackPanel>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
            </ListView>
            <GridSplitter Grid.Column="1" ShowsPreview="False" Width="3" HorizontalAlignment="Center" VerticalAlignment="Stretch" />
            <ScrollViewer Grid.Column="2">
                <Expander x:Name="Departments" 
                          Header="Departments">
                    <StackPanel>
                        <ListBox x:Name="DepartmentListBox"
                             ItemsSource="{Binding Departments}"
                             ItemTemplate="{StaticResource DepartmentCheckBox}"
                             local:MultiSelectorBehaviours.SynchronizedSelectedItems = "{Binding SelectedDepartments}"
                             SelectionMode="Multiple">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged" >
                                    <i:InvokeCommandAction 
                                    Command="{Binding DepartmentSelectionChangedCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ListBox>
                        <CheckBox Content="Select All"
                                  Margin="3">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Checked" >
                                    <i:InvokeCommandAction 
                                    Command="{Binding SelectAllCommand}"
                                    CommandParameter="{Binding ElementName=DepartmentListBox}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="UnChecked" >
                                    <i:InvokeCommandAction 
                                    Command="{Binding UnSelectAllCommand}"
                                    CommandParameter="{Binding ElementName=DepartmentListBox}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </CheckBox>
                        <DockPanel>
                            <TextBlock Text="Add" DockPanel.Dock="Left"/>
                            <TextBox x:Name="AddTextBox">
                                <TextBox.InputBindings>
                                    <KeyBinding Command="{Binding AddDepartment}" 
                                                CommandParameter="{Binding ElementName=AddTextBox}" 
                                                Key="Enter" />
                                </TextBox.InputBindings>
                            </TextBox>
                        </DockPanel>
                    </StackPanel>
                </Expander>
            </ScrollViewer>
        </Grid>
    </DockPanel>
</Window>
